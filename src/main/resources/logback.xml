<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
    <!-- log 기록 절대 위치 설정 -->
    <property name="LOG_HOME" value="${user.home}/logs/erp" />
    <property name="LOG_PATH_NAME" value="${LOG_HOME}/erp_web.log"/>
    <property name="LOG_PATH_NAME_DEBUG" value="${LOG_HOME}/erp_debug.log"/>
    <property name="LOG_PATH_NAME_ERROR" value="${LOG_HOME}/erp_error.log"/>

    <property name="LOG_LEVEL" value="INFO" />
    <property name="LOG_LEVEL_SQL" value="WARN"/>
    <property name="LOG_LEVEL_JDBC" value="WARN"/>
    <property name="LOG_LEVEL_TOMCAT" value="WARN"/>
    <property name="LOG_LEVEL_SPRING" value="WARN" />
    <property name="LOG_LEVEL_ROOT" value="WARN" />

    <property name="LOG_MAX_HISTORY" value="5"/>
    <property name="LOG_MAX_FILE_SIZE" value="64MB"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <property name="CONSOLE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative]  %clr(%-5level) %clr(${PID:-}){magenta} %clr(---){faint} %clr([%15.15thread]){faint} %clr(%-40.40logger{36}){cyan} %clr(:){faint} - %method\\(%line\\) : %msg%n"/>

    <property name="FILE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative] %-5level ${PID:-} --- [%15.15thread] %-40.40logger{36} : %msg%n"/>

    <property name="LEVEL_FILTER_ONMATCH" value="ACCEPT"/>
    <property name="LEVEL_FILTER_ONMISMATCH" value="DENT"/>

    <!-- 콘솔(STDOUT) -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>${LEVEL_FILTER_ONMATCH}</onMatch>
            <onMismatch>${LEVEL_FILTER_ONMISMATCH}</onMismatch>
        </filter>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 파일(FILE) -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>${LEVEL_FILTER_ONMATCH}</onMatch>
            <onMismatch>${LEVEL_FILTER_ONMISMATCH}</onMismatch>
        </filter>
        <file>${LOG_PATH_NAME}</file>
        <!-- 일자별로 로그파일 적용하기 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize> <!-- 일자별 백업파일의 보관기간 -->
        </rollingPolicy>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>${LEVEL_FILTER_ONMATCH}</onMatch>
            <onMismatch>${LEVEL_FILTER_ONMISMATCH}</onMismatch>
        </filter>
        <!-- 일자별로 로그파일 적용하기 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME_DEBUG}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ERROR"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>${LEVEL_FILTER_ONMATCH}</onMatch>
            <onMismatch>${LEVEL_FILTER_ONMISMATCH}</onMismatch>
        </filter>
        <file>${LOG_PATH_NAME_ERROR}</file>
        <!-- 일자별로 로그파일 적용하기 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH_NAME_ERROR}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxHistory>${LOG_MAX_HISTORY}</maxHistory> <!-- 일자별 백업파일의 보관기간 -->
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- query logging -->
    <logger name="erp.mybatis.sql" level="${LOG_LEVEL_SQL}" additivity="false">
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="DEBUG"/>-->
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR"/>
    </logger>

    <logger name="com.erp" level="${LOG_LEVEL}" additivity="false">
<!--        <appender-ref ref="STDOUT" />-->
        <appender-ref ref="DEBUG" />
        <appender-ref ref="FILE" />
        <appender-ref ref="ERROR" />
    </logger>

    <!-- jdbc logging -->
    <logger name="java.sql" level="${LOG_LEVEL_JDBC}" additivity="false">
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="DEBUG"/>-->
<!--        <appender-ref ref="FILE"/>-->
    </logger>
    <logger name="org.mybatis.spring" level="${LOG_LEVEL_JDBC}" additivity="false">
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="DEBUG"/>-->
<!--        <appender-ref ref="FILE"/>-->
    </logger>
    <logger name="org.apache.ibatis" level="${LOG_LEVEL_JDBC}" additivity="false">
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="DEBUG"/>-->
<!--        <appender-ref ref="FILE"/>-->
    </logger>

    <!-- Tomcat logging -->
    <logger name="org.apache" level="${LOG_LEVEL_TOMCAT}" additivity="false">
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="DEBUG"/>-->
<!--        <appender-ref ref="FILE"/>-->
        <appender-ref ref="ERROR" />
    </logger>

    <!-- Spring logging -->
    <logger name="org.springframework" level="${LOG_LEVEL_SPRING}" additivity="false">
<!--        <appender-ref ref="STDOUT" />-->
<!--        <appender-ref ref="DEBUG" />-->
        <appender-ref ref="FILE" />
        <appender-ref ref="ERROR" />
    </logger>

    <root level="${LOG_LEVEL_ROOT}">
<!--        <appender-ref ref="STDOUT" />-->
<!--        <appender-ref ref="DEBUG" />-->
<!--        <appender-ref ref="FILE" />-->
<!--        <appender-ref ref="ERROR" />-->
    </root>

</configuration>